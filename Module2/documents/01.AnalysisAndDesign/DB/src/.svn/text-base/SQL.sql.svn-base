--login page

SELECT * FROM EMPLOYEE
SELECT * FROM LOGIN
SELECT * FROM PO
SELECT * FROM PO_VENDOR
SELECT * FROM VENDOR_PRODUCT
SELECT * FROM SHIPMENT
UPDTE VENDOR_PRODUCT
SET VAT=2 ,
SERVICE=10.0 
WHERE V_NO=1009 AND PRODUCT_ID=1002

CREATE TABLE LOGIN(
USER_ID VARCHAR2(20) PRIMARY KEY,
PASSWORD VARCHAR2(20),
ACCOUNT_TYPE VARCHAR2(30),
STATUS VARCHAR2(20)
)

ALTER TABLE LOGIN ADD STATUS VARCHAR2(20)
ALTER TABLE LOGIN DROP COLUMN SUPERVISOR_ID
--MODULE 1---X----STARTS HERE-------

CREATE TABLE PRODUCT 
(
PRODUCT_ID VARCHAR2(20) PRIMARY KEY, 
PRODUCT_NAME VARCHAR2(20),
UNIT_PRICE NUMBER(7,2)
)

CREATE SEQUENCE PRODUCT_SEQ
START WITH 1001
INCREMENT BY 1
NOCACHE
NOCYCLE
--store details

CREATE TABLE STORE
(
STORE_NO VARCHAR2(20) PRIMARY KEY,
STORE_MANAGER VARCHAR2(20) ,
PHONE_NO NUMBER(11),
ADDRESS_1 VARCHAR2(50),
ADDRESS_2 VARCHAR2(50),
PINCODE VARCHAR2(50),
CITY VARCHAR2(50),
STATE VARCHAR2(50),
LANDMARK VARCHAR2(50)
)


SELECT * FROM STORE
ALTER TABLE STORE DROP COLUMN PRODUCT_ID
ALTER TABLE STORE DROP COLUMN PRODUCT_NAME
ALTER TABLE STORE DROP COLUMN AVAILABLE_QUANTITY
ALTER TABLE STORE DROP COLUMN THRESHOLD_VALUE


CREATE SEQUENCE STORE_SEQ
START WITH 1001
INCREMENT BY 1
NOCACHE
NOCYCLE

DROP SEQUENCE DC_SEQ

ALTER TABLE STORE ADD FOREIGN KEY (STORE_MANAGER) REFERENCES LOGIN(USER_ID)
ALTER TABLE STORE ADD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)


CREATE TABLE STORE_PRODUCT 
(
STORE_NO VARCHAR2(20),
PRODUCT_ID VARCHAR2(20) , 
AVAILABLE_QUANTITY VARCHAR2(20),
THRESHOLD_VALUE NUMBER(5)
)

SELECT * FROM STORE_PRODUCT
INSERT INTO STORE_PRODUCT VALUES ('ST#1001','P1001','550',05) 

ALTER TABLE STORE_PRODUCT ADD FOREIGN KEY (STORE_NO) REFERENCES STORE(STORE_NO)
ALTER TABLE STORE_PRODUCT ADD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)


CREATE TABLE DC
(
DC_NO VARCHAR2(20) PRIMARY KEY,
DC_PHONE_NUMBER NUMBER(20),
ADDRESS_1 VARCHAR2(50),
ADDRESS_2 VARCHAR2(50),
PINCODE VARCHAR2(50),
CITY VARCHAR2(50),
STATE VARCHAR2(50),
LANDMARK VARCHAR2(50)
)


ALTER TABLE DC DROP COLUMN PRODUCT_ID
ALTER TABLE DC DROP COLUMN PRODUCT_NAME
ALTER TABLE DC DROP COLUMN AVAILABLE_QUANTITY
ALTER TABLE DC DROP COLUMN THRESHOLD_VALUE




CREATE SEQUENCE DC_SEQ
START WITH 1001
INCREMENT BY 1
NOCACHE
NOCYCLE






DROP SEQUENCE DC_SEQ



CREATE TABLE DC_STORE
(
DC_NO VARCHAR2(20),
STORE_NO VARCHAR2(20),
--Changed primary key

)


ALTER TABLE DC_STORE ADD CONSTRAINT CK_DC_STORE PRIMARY KEY(DC_NO,STORE_NO)
ALTER TABLE DC_STORE ADD FOREIGN KEY (DC_NO) REFERENCES DC(DC_NO)
ALTER TABLE DC_STORE ADD FOREIGN KEY (STORE_NO) REFERENCES STORE(STORE_NO)

CREATE TABLE DC_PRODUCT(
DC_NO VARCHAR2(20),
PRODUCT_ID VARCHAR2(20),
QUANTITY NUMBER(20),
THRESHOLD_VALUE NUMBER(20)
)

ALTER TABLE DC_PRODUCT ADD FOREIGN KEY (DC_NO) REFERENCES DC(DC_NO)
ALTER TABLE DC_PRODUCT ADD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)

CREATE TABLE PO
(
PO_NO VARCHAR2(20) PRIMARY KEY,
ORDERING_DATE DATE, 
RETAILER_NAME VARCHAR2(20),
EXPECTED_DATE DATE,
ORDERBY_DC_NO VARCHAR2(20),
STATUS VARCHAR2(20)
--Add Orderby dc or store
--ORDERBY
--i think we need to add ststusf
)

 


SELECT * FROM PO
ALTER TABLE PO ADD STATUS VARCHAR2(20) 
CREATE SEQUENCE PO_SEQ
START WITH 1001
INCREMENT BY 1
NOCACHE
NOCYCLE

DELETE FROM PO WHERE STATUS ='open'
SELECT * FROM PO_VENDOR
DELETE FROM PO_VENDOR WHERE  V_NO='VR1008'
ALTER TABLE PO ADD FOREIGN KEY (ORDERBY_DC_NO) REFERENCES DC(DC_NO)

CREATE TABLE PO_VENDOR 
(
PO_NO VARCHAR2(20) ,
V_NO VARCHAR2(20), 
DIRECT_TO_STORE VARCHAR2(5) 
CONSTRAINT CK_DIRECT_TO_STORE CHECK(DIRECT_TO_STORE IN ('TRUE', 'FALSE')),
VENDOR_ADDRESS VARCHAR2(30),
ADDRESS_1 VARCHAR2(50),
ADDRESS_2 VARCHAR2(50),
PINCODE VARCHAR2(50),
CITY VARCHAR2(50),
STATE VARCHAR2(50),
LANDMARK VARCHAR2(50)
)


 SELECT* FROM PO_VENDOR  
DROP TABLE PO_VENDOR
ALTER TABLE PO_VENDOR ADD FOREIGN KEY (PO_NO) REFERENCES PURCHASE_ORDER(PO_NO)
ALTER TABLE PO_VENDOR ADD FOREIGN KEY (V_NO) REFERENCES VENDOR(V_NO)
ALTER TABLE PO_VENDOR DROP COLUMN VENDOR_ADDRESS

CREATE TABLE PO_PRODUCT(
PO_NO VARCHAR2(20),
PRODUCT_ID VARCHAR2(20),
QUANTITY NUMBER(5,2)
--Wants to add Primary Key
--Primary Key(PO_NO,PRODUCT_ID)
)

SELECT * FROM PO_PRODUCT
ALTER TABLE PO_PRODUCT ADD CONSTRAINT CK_PO_PRODUCT PRIMARY KEY (PO_NO,PRODUCT_ID) 
ALTER TABLE PO_PRODUCT ADD FOREIGN KEY (PO_NO) REFERENCES PURCHASE_ORDER(PO_NO)
ALTER TABLE PO_PRODUCT ADD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
SELECT * FROM PO_PRODUCT;
 select * from PO_PRODUCT;

--MODULE 1---X----ENDS HERE-------


--MODULE 2---X----STARTS HERE-------

CREATE TABLE VENDOR
(
V_NO VARCHAR2(20) PRIMARY KEY,
V_NAME VARCHAR2(25),
PH_NO1 NUMBER(10),
PH_NO2 NUMBER(10),
ADDRESS_1 VARCHAR2(50),
ADDRESS_2 VARCHAR2(50),
PINCODE VARCHAR2(50),
CITY VARCHAR2(50),
STATE VARCHAR2(50),
LANDMARK VARCHAR2(50),
DIRECT_TO_STORE VARCHAR2(5) 
CONSTRAINT CKK_DIRECT_TO_STORE CHECK(DIRECT_TO_STORE IN ('TRUE', 'FALSE')),
STATUS VARCHAR2(20),
VENDOR_MANAGER VARCHAR2(20)
)

DROP TABLE VENDOR

CREATE SEQUENCE VENDOR_SEQ
START WITH 1001
INCREMENT BY 1
NOCACHE
NOCYCLE

DROP SEQUENCE VENDOR_SEQ

ALTER TABLE VENDOR ADD FOREIGN KEY (VENDOR_MANAGER) REFERENCES LOGIN(USER_ID)

CREATE TABLE VENDOR_PRODUCT
(
V_NO VARCHAR2(20),
PRODUCT_ID VARCHAR2(20),
VAT VARCHAR2(20),
SERVICE VARCHAR2(20)
--Add Primary Key
)
ALTER TABLE VENDOR_PRODUCT ADD CONSTRAINT CK_VENDOR_PRODUCT PRIMARY KEY (V_NO,PRODUCT_ID) 
ALTER TABLE VENDOR_PRODUCT ADD FOREIGN KEY (V_NO) REFERENCES VENDOR(V_NO)
ALTER TABLE VENDOR_PRODUCT ADD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)


CREATE TABLE VENDOR_BILL 
(
PO_NO VARCHAR2(20),
V_NO VARCHAR2(20), 
BILL_NO VARCHAR2(20),
TYPE_OF_DELIVERY VARCHAR2(20),
STATUS VARCHAR2(20),
READY_FOR_SHIPMENT VARCHAR2(20),
DIRECT_TO_STORE VARCHAR2(5) 
CONSTRAINT CCK_DIRECT_TO_STORE CHECK(DIRECT_TO_STORE IN ('TRUE', 'FALSE')),
DATE_OF_DELIVERY DATE
)
select * from VENDOR_BILL 
SELECT * FROM PO

ALTER TABLE VENDOR_BILL ADD FOREIGN KEY (V_NO) REFERENCES VENDOR(V_NO)
ALTER TABLE VENDOR_BILL ADD FOREIGN KEY (PO_NO) REFERENCES PURCHASE_ORDER(PO_NO)
ALTER TABLE VENDOR_BILL ADD FOREIGN KEY (BILL_NO) REFERENCES BILL_DETAILS(BILL_NO)
SELECT* FROM VENDOR_BILL
ALTER TABLE VENDOR_BILL ADD DC_OR_STORE_NO VARCHAR2(20)

CREATE TABLE BILL_DETAILS 
(
BILL_NO VARCHAR2(20) PRIMARY KEY,


PO_NO VARCHAR2(20),
TOTAL_AMOUNT NUMBER(10,2),
QUANTITY NUMBER(5,2)
)
CREATE SEQUENCE BILL_SEQ
START WITH 1001
INCREMENT BY 1
NOCACHE 
NOCYCLE





ALTER TABLE BILL_DETAILS ADD FOREIGN KEY (PO_NO) REFERENCES PURCHASE_ORDER(PO_NO)
SELECT * FROM EMPLOYEE
CREATE TABLE EMPLOYEE 
(
EMPLOYEE_ID VARCHAR2(20) PRIMARY KEY,
EMPLOYEE_NAME VARCHAR2(20),
V_NO VARCHAR2(20)
)

ALTER TABLE EMPLOYEE ADD FOREIGN KEY (V_NO) REFERENCES VENDOR(V_NO)

CREATE TABLE TRUCK 
(
T_NO VARCHAR2(20) PRIMARY KEY ,
V_NO VARCHAR2(20), 
YEAR DATE
)
ALTER TABLE TRUCK ADD FOREIGN KEY (V_NO) REFERENCES VENDOR(V_NO)
ALTER TABLE TRUCK
MODIFY
( 
   YEAR NUMBER(4)
);

CREATE TABLE SHIPMENT 
(
BILL_NO VARCHAR2(20) ,
PO_NO VARCHAR2(20), 
T_NO VARCHAR2(20)
)

ALTER TABLE SHIPMENT ADD FOREIGN KEY (T_NO) REFERENCES TRUCK(T_NO)
ALTER TABLE SHIPMENT ADD FOREIGN KEY (PO_NO) REFERENCES PURCHASE_ORDER(PO_NO)
ALTER TABLE SHIPMENT ADD FOREIGN KEY (BILL_NO) REFERENCES BILL_DETAILS(BILL_NO)


--MODULE 2---X----ENDS HERE-------



--Module 3-----

--Delivery Settlement at Dc---

CREATE TABLE DELIVERY_DC
(
BILL_NO VARCHAR2(20),
RECEIVED_DELIVERY_DATE DATE,
DELIVERY_TIME TIMESTAMP,
DELIVERY_DELAYED VARCHAR2(5) 
CONSTRAINT CCC_DELIVERY_DELAYED CHECK(DELIVERY_DELAYED IN ('TRUE', 'FALSE')),
ACCEPTED_BY VARCHAR2(20),
ITEMS_RECEIVED NUMBER(25),
PENALTY_CHARGED NUMBER(25),
NO_OF_DAYS_DELAYED NUMBER(10)
)



ALTER TABLE DELIVERY_DC ADD FOREIGN KEY (BILL_NO) REFERENCES BILL_DETAILS(BILL_NO)


---Delivery Settlement at Store----

CREATE TABLE DELIVERY_STORE
(
BILL_NO VARCHAR2(20),
STORE_NO VARCHAR2(20),
PO_NO VARCHAR2(20),
DC_NO VARCHAR2(20),
T_NO VARCHAR2(20),
V_NO VARCHAR2(20),
RECEIVED_DELIVERY_DATE DATE,
DELIVERY_TIME TIMESTAMP,
DELIVERY_FROM VARCHAR2(20),
DELIVERY_DELAYED VARCHAR2(5) 
CONSTRAINT CK_DELIVERY_DELAYED CHECK(DELIVERY_DELAYED IN ('TRUE', 'FALSE')),
ACCEPTED_BY VARCHAR2(20),
ITEMS_RECEIVED NUMBER(25),
PENALTY_CHARGED NUMBER(25),
NO_OF_DAYS_DELAYED NUMBER(10)
)

ALTER TABLE DELIVERY_STORE ADD FOREIGN KEY (V_NO) REFERENCES VENDOR(V_NO)
ALTER TABLE DELIVERY_STORE ADD FOREIGN KEY (PO_NO) REFERENCES PURCHASE_ORDER(PO_NO)
ALTER TABLE DELIVERY_STORE ADD FOREIGN KEY (BILL_NO) REFERENCES BILL_DETAILS(BILL_NO)
ALTER TABLE DELIVERY_STORE ADD FOREIGN KEY (DC_NO) REFERENCES DC(DC_NO)
ALTER TABLE DELIVERY_STORE ADD FOREIGN KEY (STORE_NO) REFERENCES STORE(STORE_NO)
ALTER TABLE DELIVERY_STORE ADD FOREIGN KEY (T_NO) REFERENCES TRUCK(T_NO)
---Defect Management--

----sequence for defect report id format=DFR####--
--select 'DFR'||to_char(DEFECT_REPORT_ID.nextval,'FM0999')from dual; --

CREATE SEQUENCE DEFECT_REPORT_ID
START WITH 1001
INCREMENT BY 1
NOCACHE
NOCYCLE


CREATE TABLE DEFECT
(
DEFECT_REPORT_ID VARCHAR2(15) PRIMARY KEY,
STATUS VARCHAR2(10),
RETAILER_NAME VARCHAR2(20),
DC_STORE_NO VARCHAR2(20),
PO_NO VARCHAR2(20),
DAMAGE_TYPE VARCHAR2(25),
EMPLOYEE_ID VARCHAR2(20),
APPROVED_BY VARCHAR2(20),
TOTAL_AMOUNT NUMBER(10,2)
)

DROP TABLE DEFECT 




CREATE TABLE ADD_DEFECT_PRODUCT
(
DEFECT_REPORT_ID VARCHAR2(15),
PRODUCT_ID VARCHAR2(20),
BILL_NO VARCHAR2(20),
V_NO VARCHAR2(20)
)

DROP TABLE REL_PRO_DEFECT 

CREATE TABLE APPOINTMENT 
(
PO_NO VARCHAR2(20),
DC_NO VARCHAR2(20),
V_NO VARCHAR2(20),
EXPECTED_DATE DATE,
FIXED_DATE DATE
)
select * from APPOINTMENT
ALTER TABLE APPOINTMENT ADD FOREIGN KEY (DC_NO) REFERENCES DC(DC_NO)
ALTER TABLE APPOINTMENT ADD FOREIGN KEY (PO_NO) REFERENCES PURCHASE_ORDER(PO_NO)
ALTER TABLE APPOINTMENT ADD FOREIGN KEY (V_NO) REFERENCES VENDOR(V_NO)

CREATE TABLE STORE_ITEM_MANAGEMENT
(
PRODUCT_ID VARCHAR2(20),
OFFERS_AVAIL VARCHAR2(5)
CONSTRAINT CCC_OFFERS_AVAIL CHECK(OFFERS_AVAIL IN ('TRUE', 'FALSE')),
OFFER_DESCRIPTION VARCHAR2(50),
DISCOUNT NUMBER(15),
MRP NUMBER(20,2)
)

ALTER TABLE STORE_ITEM_MANAGEMENT ADD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)


select*from VENDOR

CREATE TABLE REGISTRATION 
(

PASSWORD VARCHAR2(20),
USER_NAME VARCHAR2(20),
ACCOUNT_TYPE VARCHAR2(20),
PHONE_NO NUMBER(11),
APPROVAL VARCHAR2(10)
)

alter table REGISTRATION DROP COLUMN USER_ID
ALTER TABLE PURCHASE_ORDER DROP COLUMN SHIPPING_ADDRESS


ALTER TABLE PURCHASE_ORDER ADD (ADDRESS_1 VARCHAR2(50),ADDRESS_2 VARCHAR2(50),
PINCODE VARCHAR2(50),
CITY VARCHAR2(50),
STATE VARCHAR2(50),
LANDMARK VARCHAR2(50)
)

CREATE TABLE DC_SUPERVISOR 
(
NAME VARCHAR2(20),
USER_ID_DC_ID VARCHAR2(20),
PASSWORD VARCHAR2(20),
PHONE_NO NUMBER(11)
)

DROP TABLE DC_SUPERVISOR
CREATE TABLE STORE_SUPERVISOR 
(
NAME VARCHAR2(20),
USER_ID_STORE_ID VARCHAR2(20),
PASSWORD VARCHAR2(20),
PHONE_NO NUMBER(11)
)

DROP TABLE STORE_SUPERVISOR
DROP TABLE PO_SUPERVISOR
CREATE TABLE PO_SUPERVISOR 
(
NAME VARCHAR2(20),
USER_ID_POSUPERVISOR_ID VARCHAR2(20),
PASSWORD VARCHAR2(20),
PHONE_NO NUMBER(11)
)


CREATE TABLE PO_STAFF 
(
USER_ID VARCHAR2(20),
NAME VARCHAR2(20),
PO_SUPERVISOR_ID VARCHAR2(20),
PASSWORD VARCHAR2(20),
PHONE_NO NUMBER(11)
)

DROP TABLE PO_STAFF



CREATE SEQUENCE PO_STAFF_SEQ
START WITH 1001
INCREMENT BY 1
NOCACHE
NOCYCLE

DROP SEQUENCE PO_STAFF_SEQ

CREATE TABLE UNIT_HEAD
(
NAME VARCHAR2(20),
USER_ID_U_ID VARCHAR2(20),
PASSWORD VARCHAR2(20),
PHONE_NO NUMBER(11)
)

DROP TABLE UNIT_HEAD
CREATE TABLE STORE_1
(
STORE_NO VARCHAR2(20) PRIMARY KEY,
STORE_MANAGER VARCHAR2(20) ,
PHONE_NO NUMBER(11),
ADDRESS_1 VARCHAR2(50),
ADDRESS_2 VARCHAR2(50),
PINCODE VARCHAR2(50),
CITY VARCHAR2(50),
STATE VARCHAR2(50),
LANDMARK VARCHAR2(50)
)
alter table STORE_1 DROP COLUMN DC_NO

CREATE SEQUENCE STORE_1_SEQ
START WITH 1001
INCREMENT BY 1
NOCACHE
NOCYCLE


ALTER TABLE STORE_1 ADD FOREIGN KEY (DC_NO) REFERENCES DC(DC_NO)
select * from PURCHASE_ORDER
select * from REGISTRATION
select * from STORE_1
TRUNCATE TABLE STORE_1
SELECT * FROM PRODUCT


CREATE TABLE PO_STAFF_SUPERVISOR 
(
PO_SUPERVISOR_ID VARCHAR2(20),
PO_STAFF_NO VARCHAR2(20)
)


SELECT * FROM DC1

CREATE TABLE USERS_1 
(
NAME VARCHAR2(20),
USER_ID VARCHAR2(20),
PASSWORD VARCHAR2(20),
ROLE VARCHAR2(20),
PHONE_NO NUMBER(11)
)